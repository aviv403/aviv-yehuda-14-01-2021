{"version":3,"sources":["hooks/useAxios.js","components/ForecastCard.js","components/ForecastCardList.js","components/CityProfile.js","components/Dashboard.js","components/ErrorMsgHandler.js","components/SearchForm.js","components/Home.js","components/FavoriteCard.js","components/Favorites.js","components/Navigation.js","hooks/useLocalStorage.js","hooks/useGeoNavigator.js","components/App.js","reportWebVitals.js","reducers/rootReducer.js","index.js"],"names":["useAxios","theme","values","accKey","useState","data","setData","dispatch","useDispatch","url","route","query","textInput","cityKey","cityName","geoLocation","latitude","longitude","getUrl","useEffect","mounted","axios","get","then","response","catch","err","type","city","ForecastCard","dailyForecast","cityData","useSelector","state","celsius","darkMode","displayDegrees","value","cels","Math","floor","Number","parseInt","Card","style","height","width","className","Header","Body","Title","LocalizedName","toStr","Date","toString","substr","indexOf","dayPrefix","Img","src","idxIcon","Day","Icon","getIconUrl","Text","Temperature","Maximum","Value","Minimum","Footer","React","memo","ForecastCardList","Key","Container","marginTop","marginBottom","Form","inline","CardGroup","DailyForecasts","map","df","idx","Fragment","CityProfile","WeatherIcon","WeatherText","Button","onClick","variant","fontSize","fontWeight","cf","fc","Imperial","Dashboard","favoriteCities","isFavorite","some","setFavorites","useContext","SetFavoritesContext","Row","Col","size","favs","filter","f","favoriteCity","ErrorMsgHandler","msg","hasError","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","transition","Flip","SearchForm","input","setInput","useRef","handleSubmit","event","preventDefault","toLowerCase","current","onSubmit","margin","InputGroup","Control","list","autoComplete","required","placeholder","onChange","e","target","replace","console","log","Prepend","id","backgroundColor","Home","FavoriteCard","setActiveKey","SetActiveKeyContext","Collapse","in","Dropdown","Divider","Favorites","HOME_KEY","FAVORITES_KEY","createContext","Navigation","activeKey","document","body","Provider","Tab","onSelect","Nav","Item","Link","eventKey","marginLeft","onstyle","offstyle","onlabel","offlabel","Content","Pane","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","Function","setValue","setItem","stringify","useGeoNavigator","setGeoLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","location","App","favorites","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","initState","rootReducer","action","suggestions","newFavorites","store","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2022001b.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction getUrl(theme, values, accKey) {\r\n  const base = \"https://dataservice.accuweather.com/\";\r\n  let route = \"\";\r\n  let query = \"\";\r\n\r\n  switch (theme) {\r\n    case \"autocomplete\":\r\n      route = \"locations/v1/cities/autocomplete\";\r\n      query = `?apikey=${accKey}&q=${values.textInput}`;\r\n      break;\r\n    case \"todayForcast\":\r\n      route = \"currentconditions/v1/\";\r\n      query = `${values.cityKey}?apikey=${accKey}`;\r\n      break;\r\n    case \"5DaysForcast\":\r\n      route = \"forecasts/v1/daily/5day/\";\r\n      query = `${values.cityKey}?apikey=${accKey}`;\r\n      break;\r\n    case \"cityInfo\":\r\n      route = \"locations/v1/cities/search\";\r\n      query = `?apikey=${accKey}&q=${values.cityName}`;\r\n      break;\r\n    case \"geoLocation\":\r\n      if (values.geoLocation) {\r\n        const { latitude, longitude } = values.geoLocation;\r\n        route = \"locations/v1/cities/geoposition/search\";\r\n        query = `?apikey=${accKey}&q=${latitude},${longitude}`;\r\n      }\r\n      break;\r\n    default:\r\n      return \"\"\r\n  }\r\n  if (query === \"\") {\r\n    return \"\";\r\n  }\r\n  return base + route + query;\r\n}\r\n\r\nconst useAxios = (theme, values, accKey) => {\r\n  const [data, setData] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const url = getUrl(theme, values, accKey);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (url) {\r\n      if (mounted) {\r\n        axios\r\n          .get(url)\r\n          .then((response) => {\r\n            setData(response.data);\r\n          })\r\n          .catch((err) => {\r\n            dispatch({ type: \"HAS_API_ERROR\" });\r\n          });\r\n      }\r\n    }\r\n\r\n    return () => (mounted = false);\r\n  }, [url, values.city]);\r\n\r\n  return { data };\r\n};\r\n\r\nexport default useAxios;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ForecastCard = ({ dailyForecast, cityData }) => {\r\n  const { celsius, darkMode } = useSelector((state) => state);\r\n\r\n  const displayDegrees = (value) => {\r\n    const cels = Math.floor((Number.parseInt(value) - 32) * (5 / 9));\r\n    return celsius ? `${cels} °C` : `${value} °F`;\r\n  };\r\n\r\n  const getIconUrl = () => {\r\n    const idxIcon =\r\n      Number.parseInt(dailyForecast.Day.Icon) < 10\r\n        ? `0${dailyForecast.Day.Icon}`\r\n        : `${dailyForecast.Day.Icon}`;\r\n\r\n    return `https://developer.accuweather.com/sites/default/files/${idxIcon}-s.png`;\r\n  };\r\n\r\n  const dayPrefix = () => {\r\n    const day = new Date(dailyForecast.Date);\r\n    const toStr = day.toString();\r\n    return toStr.substr(0, toStr.indexOf(\" \"));\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      style={{ height: \"250px\", width: \"150px\" }}\r\n      className={\r\n        darkMode ? \"bg-dark border-secondary text-light\" : \"bg-light text-dark\"\r\n      }\r\n    >\r\n      <Card.Header></Card.Header>\r\n      <Card.Body>\r\n        {cityData && <Card.Title>{cityData.LocalizedName}</Card.Title>}\r\n        {dailyForecast && (\r\n          <>\r\n            <Card.Title>{dayPrefix()}</Card.Title>\r\n            <Card.Img\r\n              className=\"mt-2\"\r\n              src={getIconUrl()}\r\n              style={{ width: \"50%\" }}\r\n            />\r\n            <Card.Text className=\"mt-3\">\r\n              {displayDegrees(dailyForecast.Temperature.Maximum.Value)}\r\n            </Card.Text>\r\n            <Card.Text>\r\n              {displayDegrees(dailyForecast.Temperature.Minimum.Value)}\r\n            </Card.Text>\r\n          </>\r\n        )}\r\n      </Card.Body>\r\n      <Card.Footer></Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default React.memo(ForecastCard);\r\n","import React from \"react\";\r\nimport { CardGroup, Form, Container } from \"react-bootstrap\";\r\nimport useAxios from \"../hooks/useAxios\";\r\nimport ForecastCard from \"./ForecastCard\";\r\n\r\nconst ForecastCardList = ({ cityData, accKey }) => {\r\n  const cityKey = cityData.Key;\r\n  const { data } = useAxios(\"5DaysForcast\", { cityKey }, accKey);\r\n\r\n  return (\r\n    <Container\r\n      className=\"d-inline justify-content-center text-center\"\r\n      style={{ marginTop: \"40px\", marginBottom: \"20px\" }}\r\n    >\r\n      <Form inline className=\"justify-content-center\">\r\n        <CardGroup>\r\n          {data &&\r\n            data.DailyForecasts.map((df, idx) => {\r\n              return (\r\n                <React.Fragment key={idx}>\r\n                  <ForecastCard dailyForecast={df} />\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n        </CardGroup>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default React.memo(ForecastCardList);\r\n","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useAxios from \"../hooks/useAxios\";\r\n\r\nconst CityProfile = ({ cityName, cityKey, accKey }) => {\r\n  const { celsius, darkMode } = useSelector((state) => state);\r\n\r\n  const dispatch = useDispatch();\r\n  const { data } = useAxios(\r\n    \"todayForcast\",\r\n    { cityName, cityKey },\r\n    accKey\r\n  );\r\n\r\n  const handleUnitsClick = () => {\r\n    dispatch({ type: \"TOGGLE_CELSIUS\" });\r\n  };\r\n\r\n  const displayDegrees = (value) => {\r\n    const cels = Math.floor((Number.parseInt(value) - 32) * (5 / 9));\r\n    const cf = (\r\n      <>\r\n        <>{cels} °C</>\r\n        <Card.Text className=\"text-muted\" style={{ fontSize: \"15px\" }}>\r\n          {value + \" °F\"}\r\n        </Card.Text>\r\n      </>\r\n    );\r\n    const fc = (\r\n      <>\r\n        <>{value} °F</>\r\n        <Card.Text className=\"text-muted\" style={{ fontSize: \"15px\" }}>\r\n          {cels + \"°C\"}\r\n        </Card.Text>\r\n      </>\r\n    );\r\n\r\n    return celsius ? cf : fc;\r\n  };\r\n\r\n  const getIconUrl = () => {\r\n    const idxIcon =\r\n      Number.parseInt(data[0].WeatherIcon) < 10\r\n        ? `0${data[0].WeatherIcon}`\r\n        : `${data[0].WeatherIcon}`;\r\n\r\n    return `https://developer.accuweather.com/sites/default/files/${idxIcon}-s.png`;\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={darkMode ? \"bg-dark border-secondary mt-4\" : \"bg-light mt-4\"}\r\n    >\r\n      {data && (\r\n        <>\r\n          <Card.Body>\r\n            <Card.Title\r\n              className={darkMode ? \"text-light border-light\" : \"text-dark\"}\r\n            >\r\n              {cityName}\r\n            </Card.Title>\r\n            <Card.Img\r\n              className=\"text-center\"\r\n              style={{ width: \"60%\" }}\r\n              src={getIconUrl()}\r\n            />\r\n            <Card.Text className={darkMode ? \"text-light\" : \"text-dark\"}>\r\n              {data[0].WeatherText}\r\n            </Card.Text>\r\n\r\n            <Card.Text>\r\n              <Button\r\n                onClick={handleUnitsClick}\r\n                variant=\"outline\"\r\n                className=\"text-primary\"\r\n              style={{fontSize: \"25px\", fontWeight: \"bold\"}}\r\n              >\r\n                {displayDegrees(data[0].Temperature.Imperial.Value)}\r\n              </Button>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CityProfile;\r\n","import React, { useContext } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport useAxios from \"../hooks/useAxios\";\r\nimport ForecastCardList from \"./ForecastCardList\";\r\nimport { SetFavoritesContext } from \"./App\";\r\nimport CityProfile from \"./CityProfile\";\r\n\r\nconst Dashboard = () => {\r\n  const { cityName, accKey, favoriteCities, darkMode } = useSelector(\r\n    (state) => state\r\n  );\r\n  const isFavorite = favoriteCities.some((fc) => fc.cityName === cityName);\r\n  const setFavorites = useContext(SetFavoritesContext);\r\n  const { data } = useAxios(\"cityInfo\", { cityName }, accKey); //fetching city information data!\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    const cityKey = data[0].Key;\r\n    if (isFavorite) {\r\n      dispatch({ type: \"REMOVE_FAVORITE_CITY\", cityKey });\r\n      setFavorites((favs) => favs.filter((f) => f.cityKey !== cityKey));\r\n    } else {\r\n      dispatch({\r\n        type: \"ADD_FAVORITE_CITY\",\r\n        favoriteCity: { cityName, cityKey },\r\n      });\r\n      setFavorites((favs) => [...favs, { cityName, cityKey }]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className={\r\n        darkMode\r\n          ? \"bg-dark border border-light mt-3\"\r\n          : \"bg-light border border-secondary mt-3\"\r\n      }\r\n    >\r\n      <Row className=\"justify-content-center\">\r\n        <Form inline className=\"d-inline\">\r\n          <Col>\r\n            {data && (\r\n              <CityProfile\r\n                cityName={data[0].LocalizedName}\r\n                cityKey={data[0].Key}\r\n                accKey={accKey}\r\n              />\r\n            )}\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              variant={isFavorite ? \"outline-danger\" : \"outline-success\"}\r\n              size=\"lg\"\r\n              className={darkMode ? \"bg-dark text-light\" : \"bg-light text-dark\"}\r\n              onClick={handleClick}\r\n            >\r\n              <Form.Text size=\"lg\">\r\n                {isFavorite ? \"Remove from\" : \"Add to\"} Favorites\r\n              </Form.Text>\r\n            </Button>\r\n          </Col>\r\n        </Form>\r\n      </Row>\r\n      <Row>\r\n        {data && <ForecastCardList cityData={data[0]} accKey={accKey} />}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default React.memo(Dashboard);\r\n","import React from \"react\";\r\nimport { ToastContainer, toast, Flip } from \"react-toastify\";\r\nimport { AiFillBell } from \"react-icons/ai\";\r\n\r\nconst ErrorMsgHandler = ({ msg, hasError }) => {\r\n  const notify = () =>\r\n    toast.error(\r\n      <>\r\n        <AiFillBell /> {msg}\r\n      </>,\r\n      {\r\n        position: \"top-center\",\r\n        autoClose: 3500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        progress: undefined,\r\n        transition: Flip,\r\n      }\r\n    );\r\n    \r\n    if (hasError) {\r\n      notify();\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMsgHandler;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Col, Container, Row, InputGroup } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ErrorMsgHandler from \"./ErrorMsgHandler\";\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport useAxios from \"../hooks/useAxios\";\r\n\r\nconst SearchForm = () => {\r\n  const dispatch = useDispatch();\r\n  const {accKey,darkMode} = useSelector((state) => state);\r\n  const [input, setInput] = useState(\"\");\r\n  const hasError = useRef(false);\r\n  const { data } = useAxios(\r\n    \"autocomplete\",\r\n    { textInput: input },\r\n    accKey\r\n  );\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (input) {\r\n      if (\r\n        data &&\r\n        data.some(\r\n          (city) => input.toLowerCase() === city.LocalizedName.toLowerCase()\r\n        )\r\n      ) {\r\n        hasError.current = false;\r\n        dispatch({ type: \"SET_CITY_NAME\", cityName: input });\r\n      } else {\r\n        hasError.current = true;\r\n      }\r\n    }\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    hasError.current = false;\r\n    let value = e.target.value;\r\n    value = value.replace(/[^A-Za-z-' ']/gi, \"\");\r\n    console.log(value);\r\n    setInput(value);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center text-center\">\r\n      <Form onSubmit={handleSubmit} style={{ margin: \"10px\" }}>\r\n        <Row>\r\n          <Col>\r\n            <InputGroup>\r\n              <Form.Control\r\n                list=\"cities\"\r\n                autoComplete=\"off\"\r\n                className={\r\n                  darkMode ? \"bg-dark text-light\" : \"bg-light text-dark\"\r\n                }\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Search City\"\r\n                onChange={handleInputChange}\r\n                value={input}\r\n              />\r\n\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text\r\n                  className={\r\n                    darkMode ? \"bg-secondary\" : \"bg-secondary border-secondary\"\r\n                  }\r\n                  onClick={handleSubmit}\r\n                >\r\n                  <BsSearch />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <datalist\r\n                id=\"cities\"\r\n                style={{\r\n                  backgroundColor: \"red\",\r\n                }}\r\n              >\r\n                {data &&\r\n                  data.map((city) => (\r\n                    <option key={city.Key} value={city.LocalizedName} />\r\n                  ))}\r\n              </datalist>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n\r\n      <ErrorMsgHandler msg=\"Invalid Input!\" hasError={hasError.current} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport ErrorMsgHandler from \"./ErrorMsgHandler\";\r\n\r\nconst Home = () => {\r\n  const hasError = useSelector((state) => state.hasError);\r\n\r\n  return (\r\n    <Container className=\"bg-warnings d-flex justify-content-center\">\r\n      <Row\r\n        className=\"text-center justify-content-center\"\r\n        style={{ margin: \"20px\" }}\r\n      >\r\n            <SearchForm />\r\n\r\n        {hasError ? (\r\n          <>\r\n            <ErrorMsgHandler msg={\"ERROR: API KEY!\"} hasError={true} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Dashboard />\r\n          </>\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default React.memo(Home);\r\n","import React, { useContext } from \"react\";\r\nimport { Card, Collapse, Dropdown } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useAxios from \"../hooks/useAxios\";\r\nimport { SetActiveKeyContext } from \"./Navigation\";\r\n\r\nconst FavoriteCard = ({ favoriteCity, accKey }) => {\r\n  const { cityName, cityKey } = favoriteCity;\r\n  const { celsius, darkMode } = useSelector((state) => state);\r\n\r\n  const dispatch = useDispatch();\r\n  const { data } = useAxios(\"todayForcast\", { cityName, cityKey }, accKey);\r\n  const setActiveKey = useContext(SetActiveKeyContext);\r\n\r\n  const displayDegrees = (value) => {\r\n    const cels = Math.floor((Number.parseInt(value) - 32) * (5 / 9));\r\n    return celsius ? `${cels} °C` : `${value} °F`;\r\n  };\r\n\r\n  const getIconUrl = () => {\r\n    const idxIcon =\r\n      Number.parseInt(data[0].WeatherIcon) < 10\r\n        ? `0${data[0].WeatherIcon}`\r\n        : `${data[0].WeatherIcon}`;\r\n\r\n    return `https://developer.accuweather.com/sites/default/files/${idxIcon}-s.png`;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    dispatch({ type: \"SET_CITY_NAME\", cityName });\r\n    setActiveKey(\"home\");\r\n  };\r\n\r\n  return (\r\n    <Collapse in={true}>\r\n      <Card\r\n        style={{ height: \"240px\", width: \"180px\" }}\r\n        onClick={handleClick}\r\n        className={\r\n          darkMode ? \"bg-secondary border-light text-light mt-4\" : \" mt-4\"\r\n        }\r\n      >\r\n        {data && (\r\n          <>\r\n            <Card.Body className=\"text-center\">\r\n              <Card.Title>{cityName}</Card.Title>\r\n              <Dropdown.Divider />\r\n              <Card.Img\r\n                className=\"text-center\"\r\n                style={{ width: \"50%\", marginTop: \"1rem\" }}\r\n                src={getIconUrl()}\r\n              />\r\n              <Card.Text className=\"mt-2\">{data[0].WeatherText}</Card.Text>\r\n              <Card.Text>\r\n                {displayDegrees(data[0].Temperature.Imperial.Value)}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </>\r\n        )}\r\n      </Card>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default FavoriteCard;\r\n","import React from \"react\";\r\nimport { Col, Container, CardGroup } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FavoriteCard from \"./FavoriteCard\";\r\n\r\nconst Favorites = () => {\r\n  const { favoriteCities, accKey } = useSelector((state) => state);\r\n  const hasError = useSelector((state) => state.hasError); //checks Api errors!\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center text-center\">\r\n      {!hasError && (\r\n        <CardGroup>\r\n          {favoriteCities.map((fc) => {\r\n            return (\r\n              <Col key={fc.cityKey}>\r\n                <FavoriteCard favoriteCity={fc} accKey={accKey} />\r\n              </Col>\r\n            );\r\n          })}\r\n        </CardGroup>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport Home from \"./Home\";\r\nimport BootstrapSwitchButton from \"bootstrap-switch-button-react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useAxios from \"../hooks/useAxios\";\r\nimport Favorites from \"./Favorites\";\r\n\r\nconst HOME_KEY = \"home\";\r\nconst FAVORITES_KEY = \"favorites\";\r\nexport const SetActiveKeyContext = React.createContext();\r\n\r\nconst Navigation = () => {\r\n  const [activeKey, setActiveKey] = useState(HOME_KEY);\r\n  \r\n  const { darkMode, accKey } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const geoLocation = useSelector((state) => state.geoLocation);\r\n  const { data } = useAxios(\"geoLocation\", { geoLocation }, accKey);\r\n\r\n  useEffect(() => {\r\n    data &&\r\n      dispatch({\r\n        type: \"SET_CITY_NAME\",\r\n        cityName: data.LocalizedName,\r\n      });\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = darkMode ? \"gray\" : \"white\";\r\n  }, [darkMode]);\r\n\r\n  return (\r\n    <SetActiveKeyContext.Provider value={setActiveKey}>\r\n      <Tab.Container activeKey={activeKey} onSelect={setActiveKey}>\r\n        <div className=\"bg-dark d-flex\">\r\n          <Nav\r\n            className=\"container bg-dark justify-content-end\"\r\n            variant=\"pills\"\r\n          >\r\n            <Nav.Item>\r\n              <Nav.Link eventKey={HOME_KEY}>Home</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey={FAVORITES_KEY}>Favorites</Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item style={{ marginLeft: \"5rem\", marginTop: \"0.3rem\" }}>\r\n              <BootstrapSwitchButton\r\n                size=\"sm\"\r\n                onstyle=\"outline-secondary\"\r\n                offstyle=\"outline-light\"\r\n                onlabel=\"☾\"\r\n                offlabel=\"☼\"\r\n                onChange={() => {\r\n                  dispatch({ type: \"TOGGLE_DARK_MODE\" });\r\n                }}\r\n              />\r\n            </Nav.Item>\r\n          </Nav>\r\n        </div>\r\n        <Tab.Content>\r\n          <Tab.Pane eventKey={HOME_KEY}>\r\n            <Home />\r\n          </Tab.Pane>\r\n          <Tab.Pane eventKey={FAVORITES_KEY}>\r\n            <Favorites />\r\n          </Tab.Pane>\r\n        </Tab.Content>\r\n      </Tab.Container>\r\n    </SetActiveKeyContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst PREFIX = \"weather-app-\";\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const prefixedKey = PREFIX + key;\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey);\r\n    if (jsonValue != null) return JSON.parse(jsonValue);\r\n    if (initialValue instanceof Function) return initialValue();\r\n    else {\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\r\n  }, [prefixedKey, value]);\r\n\r\n  return [value, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst getLocation = () => {\r\n  var promise = new Promise(function (resolve, reject) {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        resolve({\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude,\r\n        });\r\n      });\r\n    } else {\r\n      reject(\"Unknown\");\r\n    }\r\n  });\r\n\r\n  return promise;\r\n};\r\n\r\nconst useGeoNavigator = () => {\r\n  const [geoLocation, setGeoLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getLocation()\r\n      .then(function (location) {\r\n        setGeoLocation(location);\r\n      })\r\n      .catch(function (err) {\r\n        setGeoLocation(null);\r\n      });\r\n  }, []);\r\n\r\n  return geoLocation;\r\n};\r\n\r\nexport default useGeoNavigator;\r\n","import React, { useEffect } from \"react\";\nimport Navigation from \"./Navigation\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { useDispatch } from \"react-redux\";\nimport useGeoNavigator from \"../hooks/useGeoNavigator\";\n\nexport const SetFavoritesContext = React.createContext();\n\nconst App = () => {\n  const [favorites, setFavorites] = useLocalStorage(\"favorites\", []);\n  const geoLocation = useGeoNavigator();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    geoLocation && dispatch({ type: \"SET_GEO_LOCATION\", geoLocation });\n  }, [geoLocation]);\n\n  useEffect(() => {\n    favorites.map((f) =>\n      dispatch({ type: \"ADD_FAVORITE_CITY\", favoriteCity: f })\n    );\n  }, []);\n\n  return (\n    <SetFavoritesContext.Provider value={setFavorites}>\n      <Navigation />\n    </SetFavoritesContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\r\n  accKey: \"ozdme2g09GVYvGGprRJxV1UohiPuTbJL\",\r\n  cityName: \"Tel Aviv\",\r\n  favoriteCities: [],\r\n  geoLocation: null,\r\n  celsius: true,\r\n  darkMode: false,\r\n  hasError: false,\r\n};\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_CITY_NAME\":\r\n      return { ...state, cityName: action.cityName };\r\n    case \"UPDATE_SUGGESTIONS\":\r\n      return { ...state, suggestions: action.suggestions };\r\n    case \"SET_GEO_LOCATION\":\r\n      return { ...state, geoLocation: action.geoLocation };\r\n    case \"TOGGLE_CELSIUS\":\r\n      return { ...state, celsius: !state.celsius };\r\n    case \"TOGGLE_DARK_MODE\":\r\n      return { ...state, darkMode: !state.darkMode };\r\n    case \"HAS_API_ERROR\":\r\n      return { ...state, hasError: true };\r\n    case \"ADD_FAVORITE_CITY\":\r\n      return {\r\n        ...state,\r\n        favoriteCities: [...state.favoriteCities, action.favoriteCity],\r\n      };\r\n    case \"REMOVE_FAVORITE_CITY\":\r\n      const newFavorites = state.favoriteCities.filter(\r\n        (fc) => fc.cityKey !== action.cityKey\r\n      );\r\n      return { ...state, favoriteCities: newFavorites };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}